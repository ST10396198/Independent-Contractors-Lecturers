@page
@model ContractMonthlyClaimSystem.Pages.Dashboard.AdminModel
@{
    ViewData["Title"] = "Dashboard";
}

<h1 class="text-center">Admin Dashboard</h1>
<h2 class="text-center">Manage Claims</h2>

<form method="get" class="d-flex flex-wrap align-items-center mb-4">
    <div class="input-group w-100 w-md-75 mb-2 mb-md-0">
        <input type="text" name="searchTerm" placeholder="Search claims... e.g. Peter Griffin" class="form-control" aria-label="Search claims" value="@Request.Query["searchTerm"]">
        <button type="submit" class="btn btn-primary ms-2">Search</button>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-striped table-hover align-middle">
        <thead>
            <tr>
                <th>Lecturer</th>
                <th>Module</th>
                <th>Date Submitted</th>
                <th>Full Amount</th>
                <th>Hours Taught</th>
                <th>Hourly Rate</th>
                <th>Description</th>
                <th>Supporting Documents</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var claim in Model.Claims)
            {
                <tr>
                    <td>@claim.User.FirstName @claim.User.LastName</td>
                    <td>@claim.Course</td>
                    <td>@claim.SubmissionDate.ToShortDateString()</td>
                    <td>@claim.TotalAmount.ToString("F2")</td>
                    <td>@claim.HoursWorked.ToString("F2")</td>
                    <td>@claim.HourlyRate.ToString("F2")</td>
                    <td>
                        @{
                            var truncatedDescription = claim.Description.Length > 20
                                ? claim.Description.Substring(0, 20) + "..."
                                : claim.Description;
                        }
                        @truncatedDescription
                    </td>
                    <td>
                        @foreach (var doc in claim.SupportingDocuments)
                        {
                            var fileHref = Url.Content("~/" + doc.FilePath);
                            <a href="@fileHref" class="text-decoration-none" target="_blank">
                                @doc.FileName
                                @if (doc != claim.SupportingDocuments.Last()) { <span>, </span> }
                            </a> 
                        }
                    </td>
                    <td>
						<span class="badge @(claim.Status.ToString() == "Approved" ? "bg-success text-dark" : claim.Status.ToString() == "Pending" ? "bg-warning text-dark" : "bg-danger text-dark")">
                            @claim.Status
                        </span>
                    </td>
                    <td>
                        <a href="@Url.Page("/Dashboard/ClaimDetails", new { id = claim.Id })" class="btn btn-info btn-sm">View</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

